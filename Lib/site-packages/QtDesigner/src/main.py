import os
import subprocess
import json
import config
import srra
import analysis
import players
import replay
import match


def main():
    replay_data = srra.ReplayData()
    for subdir, dirs, files in os.walk(config.DEBUG_AUTOSAVE_LOCATION):
        for file in files:
            filepath = f"{subdir}{os.sep}{file}"
            if filepath.endswith(".rep"):
                try:
                    match_as_json = replay.Replay.parse_replay(filepath)

                    # print(match_as_json['Computed']['WinnerTeam'])
                    if match.Match.is_one_vs_one(match_as_json):
                        # print(match_as_json['Header']['Players'])
                        my_index, index = match.Match.get_player_index(
                            match_as_json, config.YOUR_LADDER_NAMES)

                        if match_as_json['Header']['Players'][my_index]['Name'] in config.YOUR_LADDER_NAMES:

                            player = replay.Replay.get_player_from_replay(
                                match_as_json, my_index)
                            opponent = replay.Replay.get_player_from_replay(
                                match_as_json, index)

                            players = [player, opponent]

                            # statistics
                            current_match = replay.Replay.get_match_from_replay(
                                match_as_json, players)

                            # print(player.attributes())
                            replay_data.match_history.insert_match(
                                current_match)

                            # analysis.Statistics.match_outcome(player.race, opponent.race, current_match.match_winner, my_team)

                            '''
                                tvx, zvx, pvx, overall_win_ratio = analysis.winRatios(
                                    win_ratios)
                                tvt_ratio, tvz_ratio, tvp_ratio = tvx
                                zvt_ratio, zvz_ratio, zvp_ratio = zvx
                                pvt_ratio, pvz_ratio, pvp_ratio = pvx
                            '''

                except Exception as e:
                    replay_data.invalid_replays += 1

    return replay_data.match_history.match_history
