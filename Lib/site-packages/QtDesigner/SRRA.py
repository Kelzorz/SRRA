import os
import subprocess
import json
from initializations import *
from configsettings import *
import threading, time

if __name__ != "__main__":
    class Data:
        def get_data():
            invalid_replays = 0
            for subdir, dirs, files in os.walk(AUTOSAVE_LOCATION):
                print("this is what's called blocking code")
                for file in files:
                    filepath = f"{subdir}{os.sep}{file}"
                    if filepath.endswith(".rep"):
                        try:
                            cwd = os.getcwd()
                            replayname = str(file)
                            replay_filepath = filepath.replace("./", "\\")
                            #PATH + " -map " + "\"" +replay_filepath + "\""
                            command = f"{PATH} -map \"{replay_filepath}\""
                            cmd_stdout = subprocess.check_output(command, shell=True, stderr=subprocess.STDOUT, stdin=subprocess.DEVNULL)
                            match_as_json = json.loads(cmd_stdout)
                            #checks if this is a 1v1 match
                            if len(match_as_json['Header']['Players']) == 2 and match_as_json['Header']['Type']['Name'] == "Top vs Bottom" and match_as_json['Header']['Type']['ID'] == 15:

                                if match_as_json['Header']['Players'][0]['Name'] in YOUR_LADDER_NAMES:
                                    my_index = 0
                                    index = 1
                                else:
                                    my_index = 1
                                    index = 0
                                if match_as_json['Header']['Players'][my_index]['Name'] in YOUR_LADDER_NAMES:
                                    my_stats = match_as_json['Header']['Players'][my_index]
                                    his_stats = match_as_json['Header']['Players'][index]

                                    his_race = match_as_json['Header']['Players'][index]['Race']['Name']
                                    his_name = match_as_json['Header']['Players'][index]["Name"]
                                    my_race = match_as_json['Header']['Players'][my_index]['Race']['Name']

                                    match_history['Players']['Name'].append(his_name)
                                    match_history['Players']['Race'].append(his_race)

                                    my_team = my_stats['Team']
                                    winner = match_as_json['Computed']['WinnerTeam']
                                    #statistics
                                    match_dates.append(match_as_json['Header']['StartTime'])
                                    maps.append(match_as_json['Header']['Map'])
                                    apms.append(match_as_json['Computed']['PlayerDescs'][my_index]['APM'])
                                    average_apm = sum(apms)/len(apms)
                                    eapms.append(match_as_json['Computed']['PlayerDescs'][my_index]['EAPM'])
                                    average_eapm = sum(eapms)/len(eapms)
                                    my_usernames.append(match_as_json['Header']['Players'][my_index]["Name"])

                                    if my_team == winner:
                                        match_result.append("Win")
                                    else:
                                        match_result.append("Loss")

                                    matches += 1

                                    if his_race == 'Terran':
                                        if my_race == 'Terran':
                                            if my_team == winner:
                                                wins += 1
                                                tvt_wins +=1
                                            tvt_matches += 1
                                        elif my_race == 'Zerg':
                                            if my_team == winner:
                                                wins += 1
                                                zvt_wins +=1
                                            zvz_matches += 1
                                        else:
                                            if my_team == winner:
                                                wins += 1
                                                pvt_wins +=1
                                            pvz_matches += 1

                                    elif his_race == 'Zerg':
                                        if my_race == 'Terran':
                                            if my_team == winner:
                                                wins += 1
                                                tvz_wins +=1
                                            tvz_matches += 1
                                        elif my_race == 'Zerg':
                                            if my_team == winner:
                                                wins += 1
                                                zvz_wins +=1
                                            zvz_matches += 1
                                        else:
                                            if my_team == winner:
                                                wins += 1
                                                pvz_wins +=1
                                            pvz_matches += 1

                                    else:#his race is protoss
                                        if my_race == 'Terran':
                                            if my_team == winner:
                                                wins += 1
                                                tvp_wins +=1
                                            tvp_matches += 1
                                        elif my_race == 'Zerg':
                                            if my_team == winner:
                                                wins += 1
                                                zvp_wins +=1
                                            zvz_matches += 1
                                        else:
                                            if my_team == winner:
                                                wins += 1
                                                pvp_wins +=1
                                            pvz_matches += 1

                                    overall_win_ratio = str(round(wins/matches*100)) +'%'
                                    #terran
                                    if tvz_matches == 0:
                                        tvz_ratio = ""
                                    else:
                                        tvz_ratio = str(int(tvz_wins/tvz_matches*100)) +"%"

                                    if tvp_matches == 0:
                                        tvp_ratio = ""
                                    else: 
                                        tvp_ratio = str(int(tvp_wins/tvp_matches*100))+ "%"

                                    if tvt_matches == 0:
                                        tvt_ratio = ""
                                    else:
                                        tvt_ratio = str(int(tvt_wins/tvt_matches*100))+ "%"

                                    #zerg
                                    if zvz_matches == 0:
                                        zvz_ratio = ""
                                    else:
                                        zvz_ratio = str(int(zvz_wins/zvz_matches*100)) +"%"

                                    if zvp_matches == 0:

                                        zvp_ratio = ""
                                    else: 
                                        zvp_ratio = str(int(zvp_wins/zvp_matches*100))+ "%"

                                    if zvt_matches == 0:
                                        zvt_ratio = ""
                                    else:
                                        zvt_ratio = str(int(zvt_wins/zvt_matches*100))+ "%"

                                    #protoss
                                    if pvz_matches == 0:
                                        pvz_ratio = ""
                                    else:
                                        pvz_ratio = str(int(pvz_wins/pvz_matches*100)) +"%"

                                    if pvp_matches == 0:

                                        pvp_ratio = ""
                                    else: 
                                        pvp_ratio = str(int(pvp_wins/pvp_matches*100))+ "%"

                                    if pvt_matches == 0:
                                        pvt_ratio = ""
                                    else:
                                        pvt_ratio = str(int(pvt_wins/pvt_matches*100))+ "%"

                        except Exception as e:
                            invalid_replays += 1

            number_of_rows = len(match_history['Players']['Name'])

