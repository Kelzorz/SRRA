import os
import subprocess
import json
from configparser import ConfigParser


config = ConfigParser()
config_location = os.getcwd()
config.read(config_location + "\\config.ini")

PATH = config['PATHS']['PATH']
AUTOSAVE_LOCATION = config['PATHS']['AUTOSAVE_LOCATION']
YOUR_LADDER_NAMES = config['USERNAMES']['YOUR_LADDER_NAMES']
SMURF_NAMES = config['USERNAMES']['SMURF_NAMES']
#initializing to avoid nameerrors
wins = 0
matches = 0
invalid_replays = 0

tvz_wins = 0
tvz_matches = 0 
tvp_wins = 0
tvp_matches = 0 
tvt_wins = 0
tvt_matches = 0 

pvz_wins = 0
pvz_matches = 0 
pvp_wins = 0
pvp_matches = 0 
pvt_wins = 0
pvt_matches = 0 

zvz_wins = 0
zvz_matches = 0 
zvp_wins = 0
zvp_matches = 0 
zvt_wins = 0
zvt_matches = 0 
overall_win_ratio = ""
recent_matches = {}
#for displaying
match_result = []
apms = []
eapms = []
match_dates = []
maps = []
my_usernames = []
#initializing for the statistics page
average_apm = 0
average_eapm = 0
tvt_ratio = ""
tvz_ratio = ""
tvp_ratio = ""
pvt_ratio = ""
pvz_ratio = ""
pvp_ratio = ""
zvt_ratio = ""
zvz_ratio = ""
zvp_ratio = ""

match_history = {
    'Players':{
    'Name':[],
    'Race':[]
    }
}

for subdir, dirs, files in os.walk(AUTOSAVE_LOCATION):
    for file in files:
        filepath = subdir + os.sep + file
        if filepath.endswith(".rep"):
            try:
                cwd = os.getcwd()
                replayname = str(file)
                replay_filepath = filepath.replace("./", "\\")
                cmd_stdout = subprocess.check_output(PATH + " -map " + "\"" +replay_filepath + "\"", shell=True, stderr=subprocess.STDOUT, stdin=subprocess.DEVNULL)
                json_array = json.loads(cmd_stdout)
                #checks if this is a 1v1 match
                if len(json_array['Header']['Players']) == 2 and json_array['Header']['Type']['Name'] == "Top vs Bottom" and json_array['Header']['Type']['ID'] == 15:

                    if json_array['Header']['Players'][0]['Name'] in YOUR_LADDER_NAMES:
                        my_index = 0
                        index = 1
                    else:
                        my_index = 1
                        index = 0
                    if json_array['Header']['Players'][my_index]['Name'] in YOUR_LADDER_NAMES:
                        my_stats = json_array['Header']['Players'][my_index]
                        his_stats = json_array['Header']['Players'][index]

                        his_race = json_array['Header']['Players'][index]['Race']['Name']
                        his_name = json_array['Header']['Players'][index]["Name"]
                        my_race = json_array['Header']['Players'][my_index]['Race']['Name']

                        match_history['Players']['Name'].append(his_name)
                        match_history['Players']['Race'].append(his_race)

                        my_team = my_stats['Team']
                        winner = json_array['Computed']['WinnerTeam']
                        #statistics
                        match_dates.append(json_array['Header']['StartTime'])
                        maps.append(json_array['Header']['Map'])
                        apms.append(json_array['Computed']['PlayerDescs'][my_index]['APM'])
                        average_apm = sum(apms)/len(apms)
                        eapms.append(json_array['Computed']['PlayerDescs'][my_index]['EAPM'])
                        average_eapm = sum(eapms)/len(eapms)
                        my_usernames.append(json_array['Header']['Players'][my_index]["Name"])

                        if my_team == winner:
                            match_result.append("Win")
                        else:
                            match_result.append("Loss")

                        matches += 1

                        if his_race == 'Terran':
                            if my_race == 'Terran':
                                if my_team == winner:
                                    wins += 1
                                    tvt_wins +=1
                                tvt_matches += 1
                            if my_race == 'Zerg':
                                if my_team == winner:
                                    wins += 1
                                    zvt_wins +=1
                                zvz_matches += 1
                            if my_race == 'Protoss':
                                if my_team == winner:
                                    wins += 1
                                    pvt_wins +=1
                                pvz_matches += 1

                        if his_race == 'Zerg':
                            if my_race == 'Terran':
                                if my_team == winner:
                                    wins += 1
                                    tvz_wins +=1
                                tvz_matches += 1
                            if my_race == 'Zerg':
                                if my_team == winner:
                                    wins += 1
                                    zvz_wins +=1
                                zvz_matches += 1
                            if my_race == 'Protoss':
                                if my_team == winner:
                                    wins += 1
                                    pvz_wins +=1
                                pvz_matches += 1

                        if his_race == 'Protoss':
                            if my_race == 'Terran':
                                if my_team == winner:
                                    wins += 1
                                    tvp_wins +=1
                                tvp_matches += 1
                            if my_race == 'Zerg':
                                if my_team == winner:
                                    wins += 1
                                    zvp_wins +=1
                                zvz_matches += 1
                            if my_race == 'Protoss':
                                if my_team == winner:
                                    wins += 1
                                    pvp_wins +=1
                                pvz_matches += 1

                        overall_win_ratio = str(round(wins/matches*100)) +'%'
                        #terran
                        if tvz_matches == 0:
                            tvz_ratio = ""
                        else:
                            tvz_ratio = str(int(tvz_wins/tvz_matches*100)) +"%"

                        if tvp_matches == 0:

                            tvp_ratio = ""
                        else: 
                            tvp_ratio = str(int(tvp_wins/tvp_matches*100))+ "%"

                        if tvt_matches == 0:
                            tvt_ratio = ""
                        else:
                            tvt_ratio = str(int(tvt_wins/tvt_matches*100))+ "%"

                        #zerg
                        if zvz_matches == 0:
                            zvz_ratio = ""
                        else:
                            zvz_ratio = str(int(zvz_wins/zvz_matches*100)) +"%"

                        if zvp_matches == 0:

                            zvp_ratio = ""
                        else: 
                            zvp_ratio = str(int(zvp_wins/zvp_matches*100))+ "%"

                        if zvt_matches == 0:
                            zvt_ratio = ""
                        else:
                            zvt_ratio = str(int(zvt_wins/zvt_matches*100))+ "%"

                        #protoss
                        if pvz_matches == 0:
                            pvz_ratio = ""
                        else:
                            pvz_ratio = str(int(pvz_wins/pvz_matches*100)) +"%"

                        if pvp_matches == 0:

                            pvp_ratio = ""
                        else: 
                            pvp_ratio = str(int(pvp_wins/pvp_matches*100))+ "%"

                        if pvt_matches == 0:
                            pvt_ratio = ""
                        else:
                            pvt_ratio = str(int(pvt_wins/pvt_matches*100))+ "%"
            except Exception as e:
                invalid_replays += 1

number_of_rows = len(match_history['Players']['Name'])

